"use strict";(self.webpackChunkamun_sdk=self.webpackChunkamun_sdk||[]).push([[432],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),d=o,m=c["".concat(l,".").concat(d)]||c[d]||g[d]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1783:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const a={title:"Get Region Details"},i=void 0,s={unversionedId:"Examples/Regions/get-region-details",id:"Examples/Regions/get-region-details",title:"Get Region Details",description:"You can get more details about the location that you want to request using AmunSession.getregiondetails. Depending on location, there can be 1, 0 or 1+ regions.",source:"@site/docs/Examples/03-Regions/01-get-region-details.md",sourceDirName:"Examples/03-Regions",slug:"/Examples/Regions/get-region-details",permalink:"/aurora-amun-python-sdk/docs/Examples/Regions/get-region-details",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Get Region Details"},sidebar:"docSidebar",previous:{title:"Common Examples",permalink:"/aurora-amun-python-sdk/docs/Examples/Valuations/common"},next:{title:"Get Turbines",permalink:"/aurora-amun-python-sdk/docs/Examples/Turbines/get-turbines"}},l={},u=[],p={toc:u},c="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can get more details about the location that you want to request using ",(0,o.kt)("a",{parentName:"p",href:"/docs/Reference/session#get_region_details"},(0,o.kt)("inlineCode",{parentName:"a"},"AmunSession.get_region_details")),". Depending on location, there can be 1, 0 or 1+ regions."),(0,o.kt)("p",null,"You can use this method to see which reanalysis data sets are available to use in that region(s) or what the code of the region is."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from aurora.amun.client.session import AmunSession\n\nsession = AmunSession()\nregions = session.get_region_details(latitude=51.753081, longitude=-1.250017)\nprint(len(regions), "regions found")\nprint(regions[0])\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"1 regions found\nRegionDetail->{'pmfCode': 'gbr', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': True, 'powerCurveSmoothingEnabled': True}\n")),(0,o.kt)("p",null,"To see what each of the output fields means, see ",(0,o.kt)("a",{parentName:"p",href:"/docs/Reference/responses#regiondetail-objects"},(0,o.kt)("inlineCode",{parentName:"a"},"RegionalDetail")," object format")),(0,o.kt)("p",null,"Here is an example where multiple regions overlap at the point"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from aurora.amun.client.session import AmunSession\n\nsession = AmunSession()\nregions = session.get_region_details(latitude=50.757310, longitude=1.225665)\nprint(len(regions), "regions found")\nprint(regions[0])\nprint(regions[1])\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powerwhell"},"2 regions found\nRegionDetail->{'pmfCode': 'fra', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': False, 'powerCurveSmoothingEnabled': False}\nRegionDetail->{'pmfCode': 'gbr', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': True, 'powerCurveSmoothingEnabled': True}\n")),(0,o.kt)("p",null,"Calling ",(0,o.kt)("inlineCode",{parentName:"p"},"get_region_details")," is also useful when you want to know the region code that should be passed to the ",(0,o.kt)("a",{parentName:"p",href:"/docs/Reference/session#get_scenarios"},(0,o.kt)("inlineCode",{parentName:"a"},"get_scenarios"))," method. Since you will need to access relevant scenarios when running the valuations, it is common usage example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from aurora.amun.client.session import AmunSession\n\nsession = AmunSession()\nregions = session.get_region_details(latitude=50.757310, longitude=1.225665)\n\n# Just to check how many regions are avaiable at this location\nprint(len(regions), "regions found")\nfor region in regions:\n    print(region)\n\nregion_code = regions[0].pmfCode\nscenarios = session.get_scenarios(region_code)\nprint(f"Number of scenarios for the region {region_code}: {len(scenarios)}")\n')),(0,o.kt)("p",null,"Output will look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powerhshell"},"2 regions found\nRegionDetail->{'pmfCode': 'fra', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': False, 'powerCurveSmoothingEnabled': False}\nRegionDetail->{'pmfCode': 'gbr', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': True, 'powerCurveSmoothingEnabled': True}    \nNumber of scenarios for the region fra: 86\n")))}g.isMDXComponent=!0}}]);