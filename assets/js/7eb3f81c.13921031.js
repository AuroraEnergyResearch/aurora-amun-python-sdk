"use strict";(self.webpackChunkamun_sdk=self.webpackChunkamun_sdk||[]).push([[432],{7321:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var s=o(5893),i=o(1151);const r={title:"Get Region Details"},a=void 0,t={id:"Examples/Regions/get-region-details",title:"Get Region Details",description:"You can get more details about the location that you want to request using AmunSession.getregiondetails. Depending on location, there can be 1, 0 or 1+ regions.",source:"@site/docs/Examples/03-Regions/01-get-region-details.md",sourceDirName:"Examples/03-Regions",slug:"/Examples/Regions/get-region-details",permalink:"/aurora-amun-python-sdk/docs/Examples/Regions/get-region-details",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Get Region Details"},sidebar:"docSidebar",previous:{title:"Common Examples",permalink:"/aurora-amun-python-sdk/docs/Examples/Valuations/common"},next:{title:"Get Turbines",permalink:"/aurora-amun-python-sdk/docs/Examples/Turbines/get-turbines"}},l={},d=[];function c(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["You can get more details about the location that you want to request using ",(0,s.jsx)(n.a,{href:"/docs/Reference/session#get_region_details",children:(0,s.jsx)(n.code,{children:"AmunSession.get_region_details"})}),". Depending on location, there can be 1, 0 or 1+ regions."]}),"\n",(0,s.jsx)(n.p,{children:"You can use this method to see which reanalysis data sets are available to use in that region(s) or what the code of the region is."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from aurora.amun.client.session import AmunSession\n\nsession = AmunSession()\nregions = session.get_region_details(latitude=51.753081, longitude=-1.250017)\nprint(len(regions), "regions found")\nprint(regions[0])\n'})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"1 regions found\nRegionDetail->{'pmfCode': 'gbr', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': True, 'powerCurveSmoothingEnabled': True}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To see what each of the output fields means, see ",(0,s.jsxs)(n.a,{href:"/docs/Reference/responses#regiondetail-objects",children:[(0,s.jsx)(n.code,{children:"RegionalDetail"})," object format"]})]}),"\n",(0,s.jsx)(n.p,{children:"Here is an example where multiple regions overlap at the point"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from aurora.amun.client.session import AmunSession\n\nsession = AmunSession()\nregions = session.get_region_details(latitude=50.757310, longitude=1.225665)\nprint(len(regions), "regions found")\nprint(regions[0])\nprint(regions[1])\n'})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powerwhell",children:"2 regions found\nRegionDetail->{'pmfCode': 'fra', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': False, 'powerCurveSmoothingEnabled': False}\nRegionDetail->{'pmfCode': 'gbr', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': True, 'powerCurveSmoothingEnabled': True}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Calling ",(0,s.jsx)(n.code,{children:"get_region_details"})," is also useful when you want to know the region code that should be passed to the ",(0,s.jsx)(n.a,{href:"/docs/Reference/session#get_scenarios",children:(0,s.jsx)(n.code,{children:"get_scenarios"})})," method. Since you will need to access relevant scenarios when running the valuations, it is common usage example"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from aurora.amun.client.session import AmunSession\n\nsession = AmunSession()\nregions = session.get_region_details(latitude=50.757310, longitude=1.225665)\n\n# Just to check how many regions are avaiable at this location\nprint(len(regions), "regions found")\nfor region in regions:\n    print(region)\n\nregion_code = regions[0].pmfCode\nscenarios = session.get_scenarios(region_code)\nprint(f"Number of scenarios for the region {region_code}: {len(scenarios)}")\n'})}),"\n",(0,s.jsx)(n.p,{children:"Output will look something like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powerhshell",children:"2 regions found\nRegionDetail->{'pmfCode': 'fra', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': False, 'powerCurveSmoothingEnabled': False}\nRegionDetail->{'pmfCode': 'gbr', 'defaultWind': 'Era5', 'availableDatasets': ['Era5', 'NEWA', 'AuroraWindAtlas'], 'era5CorrectionEnabled': True, 'powerCurveSmoothingEnabled': True}    \nNumber of scenarios for the region fra: 86\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>t,a:()=>a});var s=o(7294);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);